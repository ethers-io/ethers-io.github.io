Application Programming Interface
*********************************

The ethers.io API attempts to be as minimal and standards compliant as possible, so industry standard libraries and tools can be used in tandem and keep applications simple.


User Interface
==============

Notifications
--------------

Notifications provide a non-interactive notice to the user. For example, they are displayed to the user when an account becomes unlocked or the balance of an account changes.

They may be useful for your program when it wishes to keep the user informed about the state or status of an event, but do not need distract them.

Function Call::
    
    ethers.notify(message[, messageType])

:message: The message to show in the notification. The title of a notification is the application's name.
:messageType: This indicates what icon to display in a notification. It should be one of **"info"**, **"success"** or **"error"**. (default: **"info"**)

Examples::

    ethers.notify("Hello World");
    ethers.notify("Hello World", 'info');
    ethers.notify("There was an error", 'error');


Wallet Interaction
==================

ethers.getAccount()
-------------------

If the user has an account, this call will request it and return it as a Promise. If the user does not have an account the result will be null.

Example::

    ethers.getAccount().then(function(address) {
        console.log('Account address: ' + address);
    }, function(error) {
        console.log('Error: ' + error.message);
    });


ethers.send(destinationAddress, amountWei)
------------------------------------------

:amountWei: May be specified as a *hex string* or *BN*

Example::

    // These are all equivalent
    var amountWei = '0xde0b6b3a7640000';
    var amountWei = new ethers.utils.BN('1000000000000000000'); // 18 zeros
    var amountWei = ethers.parseEther('1.0');
    
    ethers.send('...', '0x).then(function(hash) {
    }, function(error) {
        console.log('Error: ' + error.message);
    });


ethers.sendTransaction(transaction[, overrides])
------------------------------------------------

Event: onaccount
----------------

This event will only be triggered after a call to getAccount, and will notify the application that the currently active account has changed.


Blockchain Inspection
=====================



Errors
------

* `cancelled`
* ``permission denied``
* server error

:field: What what what?
        with many lines?

what
    testing somethign lien this?
    more

BlockQuote
    This is the day that all good turtles go out and
    play some songs of fun times.
